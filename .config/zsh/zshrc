#!/bin/zsh
#
#-----------------------------------------------------------------------------------------------
# sf.environment
# ----------------------------------------------------------------------------------------------
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/IDE/IDEA/idea-IU-212.5284.40/bin:$PATH
EDITOR=/usr/bin/vim
BROWSER=/usr/bin/firefox
PAGER=less

# My custom variables file
#if [[ -d $HOME/.config/sf.environment/variables.d && -f $HOME/.config/sf.environment/variables.d/*.sh ]]; then 
#    for variables in $HOME/.config/sf.environment/variables.d/*.sh; do 
#        source "$variables"; 
#    done; 
#fi
if [[ -d $HOME/.config/sf.environment/variables.d ]]; then
    if ! [[ -z "$(ls -A $HOME/.config/sf.environment/variables.d)" ]]; then
        for variables in $HOME/.config/sf.environment/variables.d/*.sh; do 
            source "$variables"; 
        done; 
    fi    
fi
#
# My secure variables file
#if [[ -d $HOME/.config/sf.environment/sec_variables.d && -f $HOME/.config/sf/environment/sec_variables.d/*.sh ]]; then 
#    for sec_variables in $HOME/.config/sf.environment/sec_variables.d/*.sh; do 
#        source "$sec_variables"; 
#    done; 
#fi
#
if [[ -d $HOME/.config/sf.environment/sec_variables.d ]]; then 
    if ! [[ -z $"(ls -A $HOME/.config/sf.environment/sec_variables.d)" ]]; then
        for sec_variables in $HOME/.config/sf.environment/sec_variables.d/*.sh; do 
            source "$sec_variables"; 
        done; 
    fi
fi
# My custom alias file
#if [[ -d $HOME/.config/sf.environment/alias.d && -f $HOME/.config/sf.environment/alias.d/*.sh ]]; then 
#    for alias in $HOME/.config/sf.environment/alias.d/*.sh; do 
#        source "$alias"; 
#    done; 
#fi
#
if [[ -d $HOME/.config/sf.environment/alias.d ]]; then 
    if ! [[ -z $"(ls -A $HOME/.config/sf.environment/alias.d)" ]]; then
        for alias in $HOME/.config/sf.environment/alias.d/*.sh; do 
            source "$alias"; 
        done;
    fi    
fi
# My custom 'source' some programs
#if [[ -d $HOME/.config/sf.environment/source.d && -f $HOME/.config/sf.environment/source.d/*.sh ]]; then 
#    for source in $HOME/.config/sf.environment/source.d/*.sh; do 
#        source "$source"; 
#    done; 
#fi
#
if [[ -d $HOME/.config/sf.environment/source.d ]]; then 
    if ! [[ -z $"(ls -A $HOME/.config/sf.environment/source.d)" ]]; then
        for source in $HOME/.config/sf.environment/source.d/*.sh; do 
            source "$source"; 
        done; 
    fi     
fi
#----------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------
#
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias lsa='ls -la --color=auto'
alias path='echo $PATH | tr ":" "\n"'
alias r=ranger
alias c=clear

# Open Vim in notes file
alias ov='vim $HOME/notes/default'

# Edit scripts
alias es='vim $HOME/.local/bin'
alias ee='vim $HOME/.config/sf.environment'

#PS1='[\u@\h \W]\$ '


# Path to your oh-my-zsh installation.
export ZSH="$HOME/.config/zsh/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="clean"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=$HOME/.config/zsh

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions fasd zsh-syntax-highlighting zsh-vi-mode docker docker-compose)

source $ZSH/oh-my-zsh.sh
HISTFILE=$HOME/.config/zsh/zsh_history
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias zshconf='vim $ZSH/zshrc'

# Highlight plugin
# set heghlithing level
# ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
#
#----------------------------------------------------------------------------
#                                 tmux config
#----------------------------------------------------------------------------
#
# Autostart tmux if terminal start
#if command -v tmux &> /dev/null && [ -z "$TMUX" ]; then
#    tmux attach -t default || tmux new -s default
#fi

# Start tmux completition
# (tmux attach -t <TAB>)
source $HOME/.config/tmux/ext/tmux-completion/tmux

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
